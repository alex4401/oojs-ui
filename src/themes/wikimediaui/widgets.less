@import 'common.less';

.theme-oo-ui-widget() {}

.theme-oo-ui-actionWidget() {}

.theme-oo-ui-buttonWidget() {}

.theme-oo-ui-buttonGroupWidget() {
	.oo-ui-buttonElement-framed {
		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-filled--disabled;
			}
		}
	}

	// Give hovered/focussed/active buttons higher `z-index`, so that borders display correctly.
	// Identical to .theme-oo-ui-buttonSelectWidget, except for the `:focus` selector.
	&.oo-ui-widget-enabled {
		.oo-ui-buttonElement {
			&.oo-ui-toggleWidget-on + .oo-ui-toggleWidget-on {
				> .oo-ui-buttonElement-button,
				> .oo-ui-buttonElement-button:active {
					border-left-color: @border-color-base;
				}
			}
		}
	}
}

.theme-oo-ui-buttonInputWidget() {}

.theme-oo-ui-buttonMenuSelectWidget() {}

.theme-oo-ui-buttonOptionWidget() {}

.theme-oo-ui-buttonSelectWidget() {
	.oo-ui-buttonOptionWidget {
		&.oo-ui-widget-disabled + .oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				border-left-color: @border-color-filled--disabled;
			}
		}
	}

	&.oo-ui-widget-enabled {
		&:focus {
			.oo-ui-buttonOptionWidget.oo-ui-optionWidget-selected {
				.oo-ui-buttonElement-button {
					border-color: @border-color-base--focus;
					box-shadow: @box-shadow-progressive-filled--focus;
					// In Windows high contrast mode the outline becomes visible.
					outline-color: @outline-color-base--focus;
				}
			}
		}
	}
}

.theme-oo-ui-checkboxInputWidget() {
	// `<input type=checkbox>` element is visually replaced by `span` that follows
	[ type='checkbox' ] {
		& + span {
			background-color: @background-color-base;
			border-color: @border-color-input-binary;
		}

		&:indeterminate {
			& + span::before {
				// `@color-base--inverted` as `background-color` due to Accent50 filled area below.
				background-color: @color-base--inverted;
			}
		}

		&:disabled {
			& + span {
				background-color: @background-color-filled--disabled;
				border-color: @border-color-base--disabled;
			}
		}
	}

	&.oo-ui-widget-enabled [ type='checkbox' ] {
		// `:focus` has to come first, otherwise a specificity race with `:hover:focus` etc is necessary
		&:focus + span {
			border-color: @border-color-base--focus;
			box-shadow: @box-shadow-base--focus;
			// In Windows high contrast mode the outline becomes visible.
			outline-color: @outline-color-base--focus;
		}

		&:hover + span {
			border-color: @border-color-framed-progressive--hover;
		}

		&:active + span {
			background-color: @color-primary--active;
			border-color: @border-color-input-binary--active;
			box-shadow: @box-shadow-input-binary--active;
		}

		&:checked,
		&:indeterminate {
			& + span {
				background-color: @background-color-input-binary--checked;
				border-color: @border-color-input-binary--checked;
			}

			&:focus + span {
				background-color: @background-color-input-binary--checked;
				border-color: @border-color-input-binary--checked;
				box-shadow: @box-shadow-progressive-filled--focus;
			}

			&:hover + span {
				background-color: @color-primary--hover;
				border-color: @border-color-framed-progressive--hover;
			}

			&:active + span {
				background-color: @background-color-input-binary--active;
				border-color: @border-color-input-binary--active;
				box-shadow: @box-shadow-input-binary--active;
			}
		}
	}
}

.theme-oo-ui-checkboxMultioptionWidget() {}

.theme-oo-ui-checkboxMultiselectWidget() {}

.theme-oo-ui-checkboxMultiselectInputWidget() {}

.theme-oo-ui-comboBoxInputWidget() {
	&-open &-dropdownButton {
		> .oo-ui-buttonElement-button {
			background-color: @background-color-framed--hover;
		}
	}
}

.theme-oo-ui-decoratedOptionWidget() {}

.theme-oo-ui-dropdownWidget() {
	&.oo-ui-widget-enabled &-handle {
		background-color: @background-color-framed;
		color: @color-base;

		&:hover {
			background-color: @background-color-framed--hover;
			color: @color-base--hover;
			border-color: @border-color-base--hover;
		}

		&:active {
			color: @color-base--active;
			border-color: @border-color-base--active;
		}

		&:focus {
			border-color: @border-color-base--focus;
			outline-color: @outline-color-base--focus;
			box-shadow: @box-shadow-base--focus;
		}
	}

	&.oo-ui-widget-enabled&-open &-handle {
		background-color: @background-color-framed--hover;
	}

	&.oo-ui-widget-disabled &-handle {
		color: @color-base--disabled;
		text-shadow: @text-shadow-base--disabled;
		border-color: @border-color-base--disabled;
		background-color: @background-color-base--disabled;
	}
}

.theme-oo-ui-dropdownInputWidget() {
	&.oo-ui-widget-enabled {
		background-color: @background-color-framed;

		&:hover {
			background-color: @background-color-framed--hover;
		}

		select {
			color: @color-base;

			&:hover {
				color: @color-base--hover;
				border-color: @border-color-base--hover;
			}

			&:active {
				color: @color-base--active;
				border-color: @border-color-base--active;
			}

			&:focus {
				border-color: @border-color-base--focus;
				outline-color: @outline-color-base--focus;
				box-shadow: @box-shadow-base--focus;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-base--disabled;

		select {
			color: @color-base--disabled;
			border-color: @border-color-base--disabled;
		}
	}
}

.theme-oo-ui-iconWidget() {}

.theme-oo-ui-indicatorWidget() {}

.theme-oo-ui-inputWidget() {}

.theme-oo-ui-labelWidget() {
	&.oo-ui-inline-help {
		color: @color-base--deemphasized;
	}
}

.theme-oo-ui-menuOptionWidget() {
	&.oo-ui-optionWidget {
		&-highlighted {
			background-color: @background-color-base--hover;
			color: @color-base--emphasized;
		}

		&-selected {
			background-color: @background-color-primary;
			color: @color-primary;
		}

		&-selected&-highlighted,
		&-pressed&-highlighted {
			background-color: @background-color-primary--hover;
			color: @color-primary;
		}
	}

	&.oo-ui-widget-enabled {
		&.oo-ui-optionWidget {
			color: @color-base;
		}
	}
}

.theme-oo-ui-menuSectionOptionWidget() {
	color: @color-base--subtle;
}

.theme-oo-ui-menuSelectWidget() {
	background-color: @background-color-base;
	border-color: @border-color-menu;
	box-shadow: @box-shadow-menu;
}

.theme-oo-ui-menuTagMultiselectWidget() {}

.theme-oo-ui-messageWidget() {
	&.oo-ui-messageWidget-block {
		&.oo-ui-flaggedElement-error {
			background-color: @background-color-error--framed;
			border-color: @border-color-error;
		}

		&.oo-ui-flaggedElement-warning {
			background-color: @background-color-warning--framed;
			border-color: @border-color-warning;
		}

		&.oo-ui-flaggedElement-success {
			background-color: @background-color-success--framed;
			border-color: @border-color-success;
		}

		&.oo-ui-flaggedElement-notice {
			background-color: @background-color-notice--framed;
			border-color: @border-color-notice;
		}
	}

	&.oo-ui-flaggedElement-error:not( .oo-ui-messageWidget-block ) {
		color: @color-error;
	}

	&.oo-ui-flaggedElement-success:not( .oo-ui-messageWidget-block ) {
		color: @color-success;
	}
}

.theme-oo-ui-multioptionWidget() {
	&.oo-ui-widget-disabled {
		color: @color-base--disabled;
	}
}

.theme-oo-ui-multiselectWidget() {}

.theme-oo-ui-numberInputWidget() {}

.theme-oo-ui-optionWidget() {
	&.oo-ui-widget-disabled {
		color: @color-base--disabled;
	}
}

.theme-oo-ui-outlineControlsWidget() {
	background-color: @background-color-base;
}

.theme-oo-ui-outlineOptionWidget() {
	&.oo-ui-optionWidget-highlighted {
		background-color: @background-color-base--hover;
		color: @color-base--emphasized;
	}

	&.oo-ui-optionWidget-selected {
		background-color: @background-color-primary;
		color: @color-primary;
	}

	&.oo-ui-optionWidget-pressed {
		background-color: @background-color-primary--hover;
		color: @color-primary;
	}
}

.theme-oo-ui-outlineSelectWidget() {
	&:focus {
		box-shadow: inset 0 0 0 2px @color-primary;
	}
}

.theme-oo-ui-popupWidget() {
	&-popup {
		background-color: @background-color-base;
		border: @border-menu;
		box-shadow: @box-shadow-menu;
	}

	&-anchored-top {
		.oo-ui-popupWidget-anchor {
			&::before {
				// The subtracting-triangles method results in a line that
				// is ~0.7px wide, so make it slightly darker to compensate.
				border-bottom-color: darken( @border-color-base, 14% );
			}

			&::after {
				border-bottom-color: @background-color-base; // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
			}
		}
	}

	&-anchored-bottom {
		.oo-ui-popupWidget-anchor {
			&::before {
				border-top-color: @border-color-base;
			}

			&::after {
				border-top-color: @background-color-base; // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
			}
		}
	}

	&-anchored-start {
		.oo-ui-popupWidget-anchor {
			&::before {
				border-right-color: @border-color-base;
			}

			&::after {
				border-right-color: @background-color-base;  // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
			}
		}
	}

	&-anchored-end {
		.oo-ui-popupWidget-anchor {
			&::before {
				border-left-color: @border-color-base;
			}

			&::after {
				border-left-color: @background-color-base;  // Using `@background-color-base` var here as `border*-color` is `background-color` subsitute
			}
		}
	}
}

.theme-oo-ui-popupButtonWidget() {}

.theme-oo-ui-progressBarWidget() {
	border: @border-base;
	box-shadow: @box-shadow-progressbar;

	&:not( .oo-ui-pendingElement-pending ) {
		background-color: @background-color-base;
	}

	&.oo-ui-widget-enabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @color-primary;
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-progressBarWidget-bar {
			background-color: @background-color-filled--disabled;
		}
	}
}

.theme-oo-ui-radioInputWidget() {
	// `<input type=radio>` element is visually replaced by `span` that follows
	[ type='radio' ] {
		& + span {
			background-color: @background-color-base;
			border-color: @border-color-input-binary;

			&::before {
				border-color: transparent;
			}
		}

		&:disabled {
			& + span {
				background-color: @background-color-filled--disabled;
				border-color: @border-color-base--disabled;
			}

			&:checked + span {
				background-color: @background-color-base;
			}
		}
	}

	&.oo-ui-widget-enabled [ type='radio' ] {
		&:hover + span {
			border-color: @border-color-framed-progressive--hover;
		}

		&:active + span {
			background-color: @background-color-input-binary--active;
			border-color: @border-color-input-binary--active;
		}

		&:checked {
			& + span {
				border-color: @border-color-input-binary--checked;
			}

			// `:focus` has to come first, otherwise a specificity race with `:hover:focus` etc is necessary
			&:focus + span {
				&::before {
					border-color: @background-color-base;
				}
			}

			&:hover + span {
				border-color: @border-color-framed-progressive--hover;
			}

			&:active + span {
				border-color: @border-color-input-binary--active;
				box-shadow: @box-shadow-input-binary--active;

				&::before {
					border-color: @border-color-input-binary--active;
				}
			}
		}
	}
}

.theme-oo-ui-radioOptionWidget() {}

.theme-oo-ui-radioSelectWidget() {
	&:focus {
		[ type='radio' ]:checked + span::before {
			border-color: @background-color-base;
		}
	}
}

.theme-oo-ui-radioSelectInputWidget() {}

.theme-oo-ui-searchWidget() {
	&-query {
		box-shadow: @box-shadow-toolbar-top;
	}
}

.theme-oo-ui-selectWidget() {}

.theme-oo-ui-selectFileInputWidget() {}

.theme-oo-ui-selectFileWidget() {
	&-dropTarget {
		background-color: @background-color-base;
		border-color: @border-color-base;
	}

	&.oo-ui-widget-enabled {
		&.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-base;

			&:hover {
				border-color: @border-color-input--hover;
			}
		}

		&.oo-ui-selectFileWidget-canDrop {
			&.oo-ui-selectFileWidget-dropTarget,
			.oo-ui-selectFileInputWidget-info > .oo-ui-inputWidget-input {
				background-color: @background-color-primary;
				color: @color-primary--active;
			}
		}
	}

	&.oo-ui-widget-disabled,
	&.oo-ui-selectFileInputWidget-empty.oo-ui-widget-disabled {
		&.oo-ui-selectFileWidget-dropTarget {
			background-color: @background-color-base--disabled;
			border-color: @border-color-base--disabled;
		}
	}
}

.theme-oo-ui-tabOptionWidget() {
	color: @color-taboption;

	.oo-ui-tabSelectWidget-framed & {
		.oo-ui-labelElement-label {
			border-bottom-color: transparent;
		}

		&.oo-ui-optionWidget-selected {
			background-color: @background-color-base;
			color: @color-base--active;

			.oo-ui-labelElement-label {
				border-bottom-color: @background-color-base; // TabOption `background-color` acting as default `border-color`
			}
		}

		&.oo-ui-widget-enabled {
			&:hover {
				background-color: rgba( 255, 255, 255, 0.3 );
				color: @color-base;
			}

			&:active {
				background-color: rgba( 255, 255, 255, 0.8 );
				color: @color-base--active;
			}

			&.oo-ui-optionWidget-selected:hover {
				background-color: @background-color-base;
			}
		}
	}

	.oo-ui-tabSelectWidget-framed.oo-ui-widget-enabled:focus &.oo-ui-optionWidget-selected .oo-ui-labelElement-label {
		border-bottom-color: @border-color-base--focus;
	}

	.oo-ui-tabSelectWidget-frameless & {
		box-shadow: inset 0 0 0 0 @color-primary;

		&.oo-ui-optionWidget-selected {
			color: @color-primary;
			box-shadow: inset 0 -@border-width-frameless-tab 0 0 @color-primary;
		}

		&.oo-ui-widget-enabled:not( .oo-ui-optionWidget-selected ) {
			&:hover {
				color: @color-primary--hover;
				box-shadow: inset 0 -@border-width-frameless-tab 0 0 @color-primary--hover;
			}

			&:active {
				color: @color-primary--active;
				box-shadow: inset 0 -@border-width-frameless-tab 0 0 @color-primary--active;
			}
		}
	}

	.oo-ui-tabSelectWidget-frameless.oo-ui-widget-enabled:focus &.oo-ui-optionWidget-selected {
		box-shadow: inset 0 0 0 @border-width-frameless-tab @color-primary;
	}
}

.theme-oo-ui-tabSelectWidget() {
	&-framed {
		background-color: @background-color-tabs;
	}

	&-frameless {
		box-shadow: inset 0 -@border-width-base 0 0 @border-color-base;
	}

	// Add background gradient to emphasize tab overflow.
	&-mobile {
		&.oo-ui-tabSelectWidget-framed::after {
			.oo-ui-horizontal-gradient( fade( #eaecf0, 0 ), #eaecf0 );
			// Override fallback color from mixin
			background-color: transparent;
		}

		&.oo-ui-tabSelectWidget-frameless::after {
			.oo-ui-horizontal-gradient( fade( #fff, 0 ), #fff );
			// Override fallback color from mixin
			background-color: transparent;
		}
	}
}

.theme-oo-ui-tagItemWidget() {
	border-color: @border-color-base;

	&.oo-ui-widget-enabled {
		color: @color-base;

		&:hover {
			background-color: @background-color-framed--hover;
			color: @color-base--hover;
			border-color: @border-color-base--hover;
		}

		&:focus {
			border-color: @border-color-base--focus;
			box-shadow: @box-shadow-base--focus;
			outline-color: @outline-color-base--focus;
		}

		&:not( .oo-ui-tagItemWidget-fixed ) {
			background-color: @background-color-framed;
		}

		&.oo-ui-flaggedElement-invalid {
			border-color: @border-color-error;

			&:hover {
				border-color: @border-color-error;
			}

			&:focus {
				border-color: @border-color-error;
				box-shadow: @box-shadow-error--focus;
			}
		}

		& .oo-ui-buttonElement-button {
			&:hover {
				background-color: @background-color-framed--hover;
			}

			&:active {
				background-color: @background-color-framed--active;
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-base--disabled;
		color: @color-base--disabled;
		border-color: @border-color-base--disabled;
		text-shadow: @text-shadow-base--disabled;
	}
}

.theme-oo-ui-tagMultiselectWidget() {
	&-handle {
		border-color: @border-color-base;

		.oo-ui-tagMultiselectWidget-group {
			> input {
				color: @color-base--emphasized;

				.mw-placeholder();

				&:focus {
					outline-color: @outline-color-base--focus; // Support: Chrome
				}
			}
		}
	}

	&.oo-ui-widget-enabled {
		// `background-color` needs to be on handle parent in oorder to enable pending animation.
		background-color: @background-color-base;

		&.oo-ui-tagMultiselectWidget-inlined {
			&:hover .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-input--hover;
			}

			&.oo-ui-tagMultiselectWidget-focus .oo-ui-tagMultiselectWidget-handle {
				border-color: @border-color-base--focus;
				outline-color: @outline-color-base--focus;
				box-shadow: @box-shadow-base--focus;
			}

			&.oo-ui-flaggedElement-invalid {
				.oo-ui-tagMultiselectWidget-handle,
				&:hover .oo-ui-tagMultiselectWidget-handle {
					border-color: @border-color-error;
				}
			}
		}

		&.oo-ui-tagMultiselectWidget-outlined {
			background-color: @background-color-base--read-only;

			.oo-ui-tagItemWidget.oo-ui-widget-enabled {
				background-color: @background-color-base;
			}

			&.oo-ui-flaggedElement-invalid .oo-ui-inputWidget-input {
				border-color: @border-color-error;
			}
		}

		&.oo-ui-flaggedElement-invalid .oo-ui-inputWidget-input {
			color: @color-error;
		}
	}

	&.oo-ui-widget-disabled &-handle {
		background-color: @background-color-base--disabled;
		color: @color-base--disabled;
		text-shadow: @text-shadow-base--disabled;
		border-color: @border-color-base--disabled;
	}
}

.theme-oo-ui-textInputWidget() {
	// `.oo-ui-inputWidget-input` serves both, `input` and `textarea`
	.oo-ui-inputWidget-input {
		background-color: @background-color-base;
		color: @color-base--emphasized;
		border-color: @border-color-base;
	}

	.oo-ui-pendingElement-pending {
		background-color: @background-color-pending-stripe;
	}

	> .oo-ui-labelElement-label {
		color: @color-base--subtle;
	}

	&.oo-ui-widget-enabled {
		.oo-ui-inputWidget-input {
			box-shadow: @box-shadow-base; // necessary for smooth transition

			.mw-placeholder();

			&:focus {
				border-color: @border-color-base--focus;
				outline-color: @outline-color-base--focus;
				box-shadow: @box-shadow-base--focus;
			}

			&[ readonly ]:not( .oo-ui-pendingElement-pending ) {
				background-color: @background-color-base--read-only;
			}
		}

		// Set on widget parent to also enable `:hover` on child elmeents
		&:hover {
			.oo-ui-inputWidget-input {
				border-color: @border-color-input--hover;

				// Applying `border-color` again to show right focus color
				&:focus {
					border-color: @border-color-base--focus;
				}
			}
		}

		// HACK: Exclude IE/Edge (and Saf<6) from this selector as it
		// doesn't understand `outline-offset`. All other browsers do. :/

		@media screen {
			@media ( min-width: 0 ) {
				textarea.oo-ui-inputWidget-input:focus {
					outline-color: @color-primary;
					outline-offset: -2px;
				}

				&.oo-ui-flaggedElement-invalid textarea.oo-ui-inputWidget-input:focus {
					outline-color: @border-color-error;
				}
			}
		}

		&.oo-ui-flaggedElement-invalid {
			.oo-ui-inputWidget-input {
				border-color: @border-color-error;

				&:hover {
					border-color: @border-color-error;
				}

				&:focus {
					border-color: @border-color-error;
					box-shadow: @box-shadow-error--focus;
				}
			}
		}
	}

	&.oo-ui-widget-disabled {
		.oo-ui-inputWidget-input {
			background-color: @background-color-base--disabled;
			// Support: Safari
			-webkit-text-fill-color: @color-base--disabled;
			color: @color-base--disabled;
			text-shadow: @text-shadow-base--disabled;
			border-color: @border-color-base--disabled;
		}

		> .oo-ui-labelElement-label {
			color: @color-base--disabled;
			text-shadow: @text-shadow-base--disabled;
		}
	}
}

.theme-oo-ui-toggleWidget() {}

.theme-oo-ui-toggleButtonWidget() {
	&.oo-ui-widget-enabled.oo-ui-buttonElement-frameless.oo-ui-toggleWidget-on {
		.oo-ui-buttonElement-button {
			background-color: @background-color-frameless--active;
			color: @color-base--active;
		}
	}
}

.theme-oo-ui-toggleSwitchWidget() {
	background-color: @background-color-framed;
	border-color: @border-color-input-binary;

	// Inner focus outline, set visible when toggled on further down.
	&::before {
		border-color: transparent;
	}

	&.oo-ui-widget-enabled {
		.oo-ui-toggleSwitchWidget-grip {
			background-color: @background-color-framed;
			border-color: @border-color-input-binary;
		}

		&:hover {
			background-color: @background-color-framed--hover;
			border-color: @border-color-framed-progressive--hover;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-framed--hover;
				border-color: @border-color-framed-progressive--hover;
			}
		}

		&:active,
		&:active:hover,
		&:active:focus {
			background-color: @background-color-input-binary--active;
			border-color: @border-color-input-binary--active;
			box-shadow: @box-shadow-input-binary--active;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-base;
				border-color: @background-color-base;
			}
		}

		&:focus {
			border-color: @border-color-base--focus;
			box-shadow: @box-shadow-base--focus;
			outline-color: @outline-color-base--focus;

			.oo-ui-toggleSwitchWidget-grip {
				border-color: @border-color-base--focus;
			}
		}

		&.oo-ui-toggleWidget-on {
			background-color: @background-color-input-binary--checked;
			border-color: @border-color-input-binary--checked;

			.oo-ui-toggleSwitchWidget-grip {
				background-color: @background-color-base;
				border-color: @background-color-base;
			}

			&:hover {
				background-color: @color-primary--hover;
				border-color: @border-color-framed-progressive--hover;
			}

			&:active,
			&:active:hover {
				background-color: @background-color-input-binary--active;
				border-color: @border-color-input-binary--active;
			}

			&:focus {
				border-color: @border-color-input-binary--checked;

				&::before {
					border-color: @color-base--inverted;
				}
			}
		}
	}

	&.oo-ui-widget-disabled {
		background-color: @background-color-filled--disabled;
		border-color: @border-color-base--disabled;

		&.oo-ui-toggleWidget-off .oo-ui-toggleSwitchWidget-grip {
			border-color: @border-color-filled--disabled;
			box-shadow: @box-shadow-filled--disabled;
		}

		&.oo-ui-toggleWidget-on .oo-ui-toggleSwitchWidget-grip {
			background-color: @background-color-base;
		}
	}
}

.mw-placeholder() {
	// Normalize placeholder styling, see T139034
	.oo-ui-placeholder( {
		color: @color-placeholder;
	} );
}
